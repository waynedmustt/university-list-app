{"ast":null,"code":"var _jsxFileName = \"/Users/ddewantara/Documents/personal/intv/univ-list-xendit/client/src/components/navbar/index.js\",\n    _s = $RefreshSig$();\n\nimport React, { useEffect, useState } from 'react';\nimport { useHistory } from 'react-router';\nimport { coreService } from '../../core/service';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nconst Navbar = () => {\n  _s();\n\n  const history = useHistory();\n  const [menus, setMenus] = useState([{\n    id: 'home',\n    title: 'Home',\n    isActive: true,\n    onClick: e => {\n      e.preventDefault();\n      history.push('/app/home');\n    }\n  }, {\n    id: 'search',\n    title: 'Search',\n    isActive: false,\n    onClick: e => {\n      e.preventDefault();\n      history.push('/app/search');\n    }\n  }, {\n    id: 'logout',\n    title: 'Logout',\n    isActive: false,\n    onClick: e => {\n      e.preventDefault(); // history.push('/app/home');\n    }\n  }]);\n  useEffect(() => {\n    const activeMenu = coreService.getItem('activeMenu');\n    let selectedMenu = menus.find(menu => menu.id === activeMenu);\n\n    if (typeof selectedMenu === 'undefined') {\n      return;\n    }\n\n    const withoutActiveMenu = menus.filter(menu => menu.id !== activeMenu).map(menu => {\n      return { ...menu,\n        isActive: false\n      };\n    });\n    selectedMenu.isActive = true;\n    let newMenus = [];\n    newMenus.push(selectedMenu, ...withoutActiveMenu);\n    console.log(newMenus, 'test'); // setMenus(\n    //     ...menus,\n    // );\n  }, []);\n  return /*#__PURE__*/_jsxDEV(React.Fragment, {\n    children: /*#__PURE__*/_jsxDEV(\"ul\", {\n      className: \"navbar-nav me-auto mb-2 mb-md-0\",\n      children: menus.map((menu, i) => /*#__PURE__*/_jsxDEV(\"li\", {\n        className: \"nav-item\",\n        children: /*#__PURE__*/_jsxDEV(\"a\", {\n          className: \"nav-link\",\n          href: \"# \",\n          onClick: menu.onClick,\n          children: menu.title\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 61,\n          columnNumber: 25\n        }, this)\n      }, i, false, {\n        fileName: _jsxFileName,\n        lineNumber: 60,\n        columnNumber: 21\n      }, this))\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 58,\n      columnNumber: 13\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 57,\n    columnNumber: 9\n  }, this);\n};\n\n_s(Navbar, \"DR/BKheTBxNYrQfdNNk9rYnam4I=\", false, function () {\n  return [useHistory];\n});\n\n_c = Navbar;\nexport default Navbar;\n\nvar _c;\n\n$RefreshReg$(_c, \"Navbar\");","map":{"version":3,"sources":["/Users/ddewantara/Documents/personal/intv/univ-list-xendit/client/src/components/navbar/index.js"],"names":["React","useEffect","useState","useHistory","coreService","Navbar","history","menus","setMenus","id","title","isActive","onClick","e","preventDefault","push","activeMenu","getItem","selectedMenu","find","menu","withoutActiveMenu","filter","map","newMenus","console","log","i"],"mappings":";;;AAAA,OAAOA,KAAP,IAAgBC,SAAhB,EAA2BC,QAA3B,QAA2C,OAA3C;AACA,SAASC,UAAT,QAA2B,cAA3B;AACA,SAASC,WAAT,QAA4B,oBAA5B;;;AAEA,MAAMC,MAAM,GAAG,MAAM;AAAA;;AACjB,QAAMC,OAAO,GAAGH,UAAU,EAA1B;AACA,QAAM,CAACI,KAAD,EAAQC,QAAR,IAAoBN,QAAQ,CAAC,CAC/B;AACIO,IAAAA,EAAE,EAAE,MADR;AAEIC,IAAAA,KAAK,EAAE,MAFX;AAGIC,IAAAA,QAAQ,EAAE,IAHd;AAIIC,IAAAA,OAAO,EAAGC,CAAD,IAAO;AACZA,MAAAA,CAAC,CAACC,cAAF;AACAR,MAAAA,OAAO,CAACS,IAAR,CAAa,WAAb;AACH;AAPL,GAD+B,EAU/B;AACIN,IAAAA,EAAE,EAAE,QADR;AAEIC,IAAAA,KAAK,EAAE,QAFX;AAGIC,IAAAA,QAAQ,EAAE,KAHd;AAIIC,IAAAA,OAAO,EAAGC,CAAD,IAAO;AACZA,MAAAA,CAAC,CAACC,cAAF;AACAR,MAAAA,OAAO,CAACS,IAAR,CAAa,aAAb;AACH;AAPL,GAV+B,EAmB/B;AACIN,IAAAA,EAAE,EAAE,QADR;AAEIC,IAAAA,KAAK,EAAE,QAFX;AAGIC,IAAAA,QAAQ,EAAE,KAHd;AAIIC,IAAAA,OAAO,EAAGC,CAAD,IAAO;AACZA,MAAAA,CAAC,CAACC,cAAF,GADY,CAEZ;AACH;AAPL,GAnB+B,CAAD,CAAlC;AA8BAb,EAAAA,SAAS,CAAC,MAAM;AACZ,UAAMe,UAAU,GAAGZ,WAAW,CAACa,OAAZ,CAAoB,YAApB,CAAnB;AACA,QAAIC,YAAY,GAAGX,KAAK,CAACY,IAAN,CAAWC,IAAI,IAAIA,IAAI,CAACX,EAAL,KAAYO,UAA/B,CAAnB;;AACA,QAAI,OAAOE,YAAP,KAAwB,WAA5B,EAAyC;AACrC;AACH;;AAED,UAAMG,iBAAiB,GAAGd,KAAK,CAACe,MAAN,CAAaF,IAAI,IAAIA,IAAI,CAACX,EAAL,KAAYO,UAAjC,EAA6CO,GAA7C,CAAkDH,IAAD,IAAU;AACjF,aAAO,EAAC,GAAGA,IAAJ;AAAUT,QAAAA,QAAQ,EAAE;AAApB,OAAP;AACH,KAFyB,CAA1B;AAGAO,IAAAA,YAAY,CAACP,QAAb,GAAwB,IAAxB;AACA,QAAIa,QAAQ,GAAG,EAAf;AACAA,IAAAA,QAAQ,CAACT,IAAT,CAAcG,YAAd,EAA4B,GAAGG,iBAA/B;AACAI,IAAAA,OAAO,CAACC,GAAR,CAAYF,QAAZ,EAAsB,MAAtB,EAbY,CAcZ;AACA;AAEA;AACH,GAlBQ,EAkBN,EAlBM,CAAT;AAmBA,sBACI,QAAC,KAAD,CAAO,QAAP;AAAA,2BACI;AAAI,MAAA,SAAS,EAAC,iCAAd;AAAA,gBACKjB,KAAK,CAACgB,GAAN,CAAU,CAACH,IAAD,EAAOO,CAAP,kBACP;AAAI,QAAA,SAAS,EAAC,UAAd;AAAA,+BACI;AAAG,UAAA,SAAS,EAAC,UAAb;AAAwB,UAAA,IAAI,EAAC,IAA7B;AACA,UAAA,OAAO,EAAEP,IAAI,CAACR,OADd;AAAA,oBAEEQ,IAAI,CAACV;AAFP;AAAA;AAAA;AAAA;AAAA;AADJ,SAA8BiB,CAA9B;AAAA;AAAA;AAAA;AAAA,cADH;AADL;AAAA;AAAA;AAAA;AAAA;AADJ;AAAA;AAAA;AAAA;AAAA,UADJ;AAaH,CAhED;;GAAMtB,M;UACcF,U;;;KADdE,M;AAkEN,eAAeA,MAAf","sourcesContent":["import React, { useEffect, useState } from 'react';\nimport { useHistory } from 'react-router';\nimport { coreService } from '../../core/service';\n\nconst Navbar = () => {\n    const history = useHistory();\n    const [menus, setMenus] = useState([\n        {\n            id: 'home',\n            title: 'Home',\n            isActive: true,\n            onClick: (e) => {\n                e.preventDefault()\n                history.push('/app/home');\n            }\n        },\n        {\n            id: 'search',\n            title: 'Search',\n            isActive: false,\n            onClick: (e) => {\n                e.preventDefault()\n                history.push('/app/search');\n            }\n        },\n        {\n            id: 'logout',\n            title: 'Logout',\n            isActive: false,\n            onClick: (e) => {\n                e.preventDefault()\n                // history.push('/app/home');\n            }\n        }\n    ]);\n\n    useEffect(() => {\n        const activeMenu = coreService.getItem('activeMenu');\n        let selectedMenu = menus.find(menu => menu.id === activeMenu);\n        if (typeof selectedMenu === 'undefined') {\n            return;\n        }\n\n        const withoutActiveMenu = menus.filter(menu => menu.id !== activeMenu).map((menu) => {\n            return {...menu, isActive: false}\n        });\n        selectedMenu.isActive = true;\n        let newMenus = [];\n        newMenus.push(selectedMenu, ...withoutActiveMenu);\n        console.log(newMenus, 'test')\n        // setMenus(\n        //     ...menus,\n\n        // );\n    }, [])\n    return(\n        <React.Fragment>\n            <ul className=\"navbar-nav me-auto mb-2 mb-md-0\">\n                {menus.map((menu, i) => (\n                    <li className=\"nav-item\" key={i}>\n                        <a className=\"nav-link\" href=\"# \" \n                        onClick={menu.onClick}\n                        >{menu.title}</a>\n                    </li>\n                ))}\n            </ul>\n        </React.Fragment>\n    );\n}\n\nexport default Navbar;"]},"metadata":{},"sourceType":"module"}