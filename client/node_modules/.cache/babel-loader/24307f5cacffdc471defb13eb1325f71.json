{"ast":null,"code":"var _jsxFileName = \"/Users/ddewantara/Documents/personal/intv/univ-list-xendit/src/components/newsletter/index.js\",\n    _s = $RefreshSig$();\n\nimport React, { useEffect, useState } from 'react';\nimport Modal from '../modal';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nconst NewsLetter = () => {\n  _s();\n\n  const [openNewsLetter, setOpenNewsLetter] = useState(false);\n  const formState = {\n    email: '',\n    firstName: '',\n    lastName: ''\n  };\n  const [user, setUser] = useState(formState);\n  useEffect(() => {\n    setOpenNewsLetter(true);\n  }, []);\n\n  const submit = e => {\n    e.preventDefault();\n  };\n\n  const renderModalBody = () => {\n    return /*#__PURE__*/_jsxDEV(React.Fragment, {\n      children: /*#__PURE__*/_jsxDEV(\"form\", {\n        children: [/*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"mb-3\",\n          children: [/*#__PURE__*/_jsxDEV(\"label\", {\n            className: \"col-form-label\",\n            children: \"Email:\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 27,\n            columnNumber: 25\n          }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n            type: \"text\",\n            className: \"form-control\",\n            value: user['email'],\n            onChange: e => setUser({ ...user,\n              email: e.target.value\n            })\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 28,\n            columnNumber: 25\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 26,\n          columnNumber: 21\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"row row-cols-1 row-cols-md-6 mb-3 text-center\",\n          children: /*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"col\",\n            children: /*#__PURE__*/_jsxDEV(\"div\", {\n              className: \"mb-3\",\n              children: [/*#__PURE__*/_jsxDEV(\"label\", {\n                className: \"col-form-label\",\n                children: \"First Name:\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 38,\n                columnNumber: 33\n              }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n                type: \"text\",\n                className: \"form-control\",\n                value: user['firstName'],\n                onChange: e => setUser({ ...user,\n                  firstName: e.target.value\n                })\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 39,\n                columnNumber: 33\n              }, this)]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 37,\n              columnNumber: 29\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 36,\n            columnNumber: 25\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 35,\n          columnNumber: 21\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"row row-cols-1 row-cols-md-6 mb-3 text-center\",\n          children: /*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"col\",\n            children: /*#__PURE__*/_jsxDEV(\"div\", {\n              className: \"mb-3\",\n              children: [/*#__PURE__*/_jsxDEV(\"label\", {\n                className: \"col-form-label\",\n                children: \"Last Name:\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 51,\n                columnNumber: 33\n              }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n                type: \"text\",\n                className: \"form-control\",\n                value: user['lastName'],\n                onChange: e => setUser({ ...user,\n                  lastName: e.target.value\n                })\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 52,\n                columnNumber: 33\n              }, this)]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 50,\n              columnNumber: 29\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 49,\n            columnNumber: 25\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 48,\n          columnNumber: 21\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 25,\n        columnNumber: 17\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 24,\n      columnNumber: 13\n    }, this);\n  };\n\n  const renderModalFooter = () => {\n    return /*#__PURE__*/_jsxDEV(React.Fragment, {\n      children: [/*#__PURE__*/_jsxDEV(\"button\", {\n        type: \"button\",\n        className: \"btn btn-secondary\",\n        \"data-bs-dismiss\": \"modal\",\n        children: \"Close\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 69,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n        type: \"button\",\n        className: \"btn btn-primary\",\n        onClick: e => submit(e),\n        children: \"Send message\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 70,\n        columnNumber: 17\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 68,\n      columnNumber: 13\n    }, this);\n  };\n\n  return /*#__PURE__*/_jsxDEV(React.Fragment, {\n    children: /*#__PURE__*/_jsxDEV(Modal, {\n      isOpen: openNewsLetter,\n      setIsOpen: setOpenNewsLetter,\n      renderBody: renderModalBody,\n      renderFooter: renderModalFooter\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 77,\n      columnNumber: 13\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 76,\n    columnNumber: 9\n  }, this);\n};\n\n_s(NewsLetter, \"6lkhJIw95nz4NPiXI/adrWkFVTQ=\");\n\n_c = NewsLetter;\nexport default NewsLetter;\n\nvar _c;\n\n$RefreshReg$(_c, \"NewsLetter\");","map":{"version":3,"sources":["/Users/ddewantara/Documents/personal/intv/univ-list-xendit/src/components/newsletter/index.js"],"names":["React","useEffect","useState","Modal","NewsLetter","openNewsLetter","setOpenNewsLetter","formState","email","firstName","lastName","user","setUser","submit","e","preventDefault","renderModalBody","target","value","renderModalFooter"],"mappings":"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","sourcesContent":["import React, { useEffect, useState } from 'react';\nimport Modal from '../modal';\n\nconst NewsLetter = () => {\n    const [openNewsLetter, setOpenNewsLetter] = useState(false);\n\n    const formState = {\n        email: '',\n        firstName: '',\n        lastName: ''\n    };\n    const [user, setUser] = useState(formState);\n\n    useEffect(() => {\n        setOpenNewsLetter(true);\n    }, [])\n\n    const submit = (e) => {\n        e.preventDefault();\n    }\n\n    const renderModalBody = () => {\n        return (\n            <React.Fragment>\n                <form>\n                    <div className=\"mb-3\">\n                        <label className=\"col-form-label\">Email:</label>\n                        <input type=\"text\" className=\"form-control\"\n                        value={user['email']}\n                        onChange={(e) => setUser({\n                            ...user, email: e.target.value\n                        })}\n                        />\n                    </div>\n                    <div className=\"row row-cols-1 row-cols-md-6 mb-3 text-center\">\n                        <div className=\"col\">\n                            <div className=\"mb-3\">\n                                <label className=\"col-form-label\">First Name:</label>\n                                <input type=\"text\" className=\"form-control\"\n                                value={user['firstName']}\n                                onChange={(e) => setUser({\n                                    ...user, firstName: e.target.value\n                                })}\n                                />\n                            </div>\n                        </div>\n                    </div>\n                    <div className=\"row row-cols-1 row-cols-md-6 mb-3 text-center\">\n                        <div className=\"col\">\n                            <div className=\"mb-3\">\n                                <label className=\"col-form-label\">Last Name:</label>\n                                <input type=\"text\" className=\"form-control\"\n                                value={user['lastName']}\n                                onChange={(e) => setUser({\n                                    ...user, lastName: e.target.value\n                                })}\n                                />\n                            </div>\n                        </div>\n                    </div>\n                </form>\n            </React.Fragment>\n        );\n    }\n\n    const renderModalFooter = () => {\n        return (\n            <React.Fragment>\n                <button type=\"button\" className=\"btn btn-secondary\" data-bs-dismiss=\"modal\">Close</button>\n                <button type=\"button\" className=\"btn btn-primary\" onClick={e => submit(e)}>Send message</button>\n            </React.Fragment>\n        );\n    }\n\n    return (\n        <React.Fragment>\n            <Modal \n            isOpen={openNewsLetter}\n            setIsOpen={setOpenNewsLetter}\n            renderBody={renderModalBody}\n            renderFooter={renderModalFooter}\n            />\n        </React.Fragment>\n    );\n}\n\nexport default NewsLetter;"]},"metadata":{},"sourceType":"module"}