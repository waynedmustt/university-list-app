{"ast":null,"code":"var _jsxFileName = \"/Users/ddewantara/Documents/personal/intv/univ-list-xendit/client/src/components/newsletter/index.js\",\n    _s = $RefreshSig$();\n\nimport React, { useEffect, useState } from 'react';\nimport Modal from '../modal';\nimport { saveNewsLetter } from '../../apis/newsletter';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nconst NewsLetter = () => {\n  _s();\n\n  const [openNewsLetter, setOpenNewsLetter] = useState(false);\n  const [isSaving, setIsSaving] = useState(false);\n  const formState = {\n    email: '',\n    firstName: '',\n    lastName: ''\n  };\n  const [user, setUser] = useState(formState);\n  const [error, setError] = useState('');\n  const [success, setSuccess] = useState('');\n  useEffect(() => {\n    setOpenNewsLetter(true);\n  }, []);\n\n  const submit = async e => {\n    e.preventDefault();\n\n    if (!user.email || !user.firstName || !user.lastName) {\n      setError('field is mandatory');\n      return;\n    }\n\n    setIsSaving(true);\n    const response = await saveNewsLetter(user);\n    setIsSaving(false);\n\n    if ((response === null || response === void 0 ? void 0 : response.status) !== 200) {\n      setError('failed to save the data');\n      return;\n    }\n\n    setSuccess('save successfully');\n    setTimeout(() => {\n      setOpenNewsLetter(false);\n    }, 2000);\n  };\n\n  const renderModalBody = () => {\n    return /*#__PURE__*/_jsxDEV(React.Fragment, {\n      children: [error ? /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"alert alert-danger\",\n        role: \"alert\",\n        children: error\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 50,\n        columnNumber: 21\n      }, this) : null, success ? /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"alert alert-success\",\n        role: \"alert\",\n        children: success\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 55,\n        columnNumber: 21\n      }, this) : null, /*#__PURE__*/_jsxDEV(\"form\", {\n        children: [/*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"mb-3\",\n          children: [/*#__PURE__*/_jsxDEV(\"label\", {\n            className: \"col-form-label\",\n            children: \"Email:\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 61,\n            columnNumber: 25\n          }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n            type: \"text\",\n            className: \"form-control\",\n            value: user['email'],\n            onChange: e => setUser({ ...user,\n              email: e.target.value\n            }),\n            disabled: isSaving\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 62,\n            columnNumber: 25\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 60,\n          columnNumber: 21\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"row row-cols-1 mb-3 text-center\",\n          children: [/*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"col-6\",\n            children: /*#__PURE__*/_jsxDEV(\"div\", {\n              className: \"mb-3\",\n              children: [/*#__PURE__*/_jsxDEV(\"label\", {\n                className: \"col-form-label\",\n                children: \"First Name:\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 73,\n                columnNumber: 33\n              }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n                type: \"text\",\n                className: \"form-control\",\n                value: user['firstName'],\n                onChange: e => setUser({ ...user,\n                  firstName: e.target.value\n                }),\n                disabled: isSaving\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 74,\n                columnNumber: 33\n              }, this)]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 72,\n              columnNumber: 29\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 71,\n            columnNumber: 25\n          }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"col-6\",\n            children: /*#__PURE__*/_jsxDEV(\"div\", {\n              className: \"mb-3\",\n              children: [/*#__PURE__*/_jsxDEV(\"label\", {\n                className: \"col-form-label\",\n                children: \"Last Name:\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 85,\n                columnNumber: 33\n              }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n                type: \"text\",\n                className: \"form-control\",\n                value: user['lastName'],\n                onChange: e => setUser({ ...user,\n                  lastName: e.target.value\n                }),\n                disabled: isSaving\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 86,\n                columnNumber: 33\n              }, this)]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 84,\n              columnNumber: 29\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 83,\n            columnNumber: 25\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 70,\n          columnNumber: 21\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 59,\n        columnNumber: 17\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 48,\n      columnNumber: 13\n    }, this);\n  };\n\n  const renderModalFooter = () => {\n    return /*#__PURE__*/_jsxDEV(React.Fragment, {\n      children: [/*#__PURE__*/_jsxDEV(\"button\", {\n        type: \"button\",\n        className: \"btn btn-secondary\" // eslint-disable-next-line\n        ,\n        \"data-bs-dismiss\": \"modal\",\n        onClick: e => setOpenNewsLetter(false),\n        children: \"Close\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 104,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n        type: \"button\",\n        className: \"btn btn-primary\",\n        onClick: e => submit(e),\n        children: \"Send message\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 106,\n        columnNumber: 17\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 103,\n      columnNumber: 13\n    }, this);\n  };\n\n  return /*#__PURE__*/_jsxDEV(React.Fragment, {\n    children: /*#__PURE__*/_jsxDEV(Modal, {\n      id: \"newsLetterModal\",\n      title: \"Newsletter\",\n      isOpen: openNewsLetter,\n      setIsOpen: setOpenNewsLetter,\n      renderBody: renderModalBody,\n      renderFooter: renderModalFooter\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 113,\n      columnNumber: 13\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 112,\n    columnNumber: 9\n  }, this);\n};\n\n_s(NewsLetter, \"kP+BwOZvTQfqu2wmWF1SrucbsuI=\");\n\n_c = NewsLetter;\nexport default NewsLetter;\n\nvar _c;\n\n$RefreshReg$(_c, \"NewsLetter\");","map":{"version":3,"sources":["/Users/ddewantara/Documents/personal/intv/univ-list-xendit/client/src/components/newsletter/index.js"],"names":["React","useEffect","useState","Modal","saveNewsLetter","NewsLetter","openNewsLetter","setOpenNewsLetter","isSaving","setIsSaving","formState","email","firstName","lastName","user","setUser","error","setError","success","setSuccess","submit","e","preventDefault","response","status","setTimeout","renderModalBody","target","value","renderModalFooter"],"mappings":"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","sourcesContent":["import React, { useEffect, useState } from 'react';\nimport Modal from '../modal';\nimport {\n saveNewsLetter\n} from '../../apis/newsletter';\n\nconst NewsLetter = () => {\n    const [openNewsLetter, setOpenNewsLetter] = useState(false);\n    const [isSaving, setIsSaving] = useState(false);\n\n    const formState = {\n        email: '',\n        firstName: '',\n        lastName: ''\n    };\n    const [user, setUser] = useState(formState);\n    const [error, setError] = useState('');\n    const [success, setSuccess] = useState('');\n\n    useEffect(() => {\n        setOpenNewsLetter(true);\n    }, [])\n\n    const submit = async (e) => {\n        e.preventDefault();\n\n        if (!user.email || !user.firstName || !user.lastName) {\n            setError('field is mandatory');\n            return;\n        }\n\n        setIsSaving(true);\n        const response = await saveNewsLetter(user);\n        setIsSaving(false);\n        if (response?.status !== 200) {\n            setError('failed to save the data');\n            return;\n        }\n\n        setSuccess('save successfully');\n        setTimeout(() => {\n            setOpenNewsLetter(false);\n        }, 2000)\n    }\n\n    const renderModalBody = () => {\n        return (\n            <React.Fragment>\n                {error ? \n                    <div className=\"alert alert-danger\" role=\"alert\">\n                        {error}\n                    </div> : null\n                }\n                {success ? \n                    <div className=\"alert alert-success\" role=\"alert\">\n                        {success}\n                    </div> : null\n                }\n                <form>\n                    <div className=\"mb-3\">\n                        <label className=\"col-form-label\">Email:</label>\n                        <input type=\"text\" className=\"form-control\"\n                        value={user['email']}\n                        onChange={(e) => setUser({\n                            ...user, email: e.target.value\n                        })}\n                        disabled={isSaving}\n                        />\n                    </div>\n                    <div className=\"row row-cols-1 mb-3 text-center\">\n                        <div className=\"col-6\">\n                            <div className=\"mb-3\">\n                                <label className=\"col-form-label\">First Name:</label>\n                                <input type=\"text\" className=\"form-control\"\n                                value={user['firstName']}\n                                onChange={(e) => setUser({\n                                    ...user, firstName: e.target.value\n                                })}\n                                disabled={isSaving}\n                                />\n                            </div>\n                        </div>\n                        <div className=\"col-6\">\n                            <div className=\"mb-3\">\n                                <label className=\"col-form-label\">Last Name:</label>\n                                <input type=\"text\" className=\"form-control\"\n                                value={user['lastName']}\n                                onChange={(e) => setUser({\n                                    ...user, lastName: e.target.value\n                                })}\n                                disabled={isSaving}\n                                />\n                            </div>\n                        </div>\n                    </div>\n                </form>\n            </React.Fragment>\n        );\n    }\n\n    const renderModalFooter = () => {\n        return (\n            <React.Fragment>\n                <button type=\"button\" className=\"btn btn-secondary\" // eslint-disable-next-line\n                data-bs-dismiss=\"modal\" onClick={e => setOpenNewsLetter(false)}>Close</button>\n                <button type=\"button\" className=\"btn btn-primary\" onClick={e => submit(e)}>Send message</button>\n            </React.Fragment>\n        );\n    }\n\n    return (\n        <React.Fragment>\n            <Modal\n            id=\"newsLetterModal\"\n            title=\"Newsletter\" \n            isOpen={openNewsLetter}\n            setIsOpen={setOpenNewsLetter}\n            renderBody={renderModalBody}\n            renderFooter={renderModalFooter}\n            />\n        </React.Fragment>\n    );\n}\n\nexport default NewsLetter;"]},"metadata":{},"sourceType":"module"}